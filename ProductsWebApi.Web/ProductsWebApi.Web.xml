<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProductsWebApi.Web</name>
    </assembly>
    <members>
        <member name="T:ProductsWebApi.Web.Controllers.ProductsController">
            <summary>
            Products controller.
            </summary>
            <response code="200">Ok.</response>
            <response code="400">Incorrect request. Check response message for more details.</response>
            <response code="500">Unexpected error occurred.</response>
        </member>
        <member name="M:ProductsWebApi.Web.Controllers.ProductsController.#ctor(ProductsWebApi.Web.Facades.Products.IProductFacade)">
            <summary>
            Ctor.
            </summary>
            <param name="customerFacade">Facade providing operations on products.</param>
        </member>
        <member name="M:ProductsWebApi.Web.Controllers.ProductsController.GetProducts">
            <summary>
            Returns all product.
            </summary>
            <returns>List of all products.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Controllers.ProductsController.GetProduct(System.Guid)">
            <summary>
            Returns product by id.
            </summary>
            <param name="id">Id of the product.</param>        
            <returns>Requested product.</returns>
            <response code="404">If product with <paramref name="id"/> doesn't exist.</response>
        </member>
        <member name="M:ProductsWebApi.Web.Controllers.ProductsController.UpdateDescription(System.Guid,ProductsWebApi.Web.Contracts.ProductUpdate)">
            <summary>
            Updates product data specified by id.
            </summary>
            <param name="id">Id of the product.</param>
            <param name="product">Data for updating product.</param>
            <response code="200">Updated.</response>
            <response code="404">If product with <paramref name="id"/> doesn't exist.</response>
        </member>
        <member name="T:ProductsWebApi.Web.Exceptions.NotFoundException">
            <summary>
            Exception is thrown when resource is not found.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Exceptions.NotFoundException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ProductsWebApi.Web.Exceptions.NotFoundException"/> class.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Exceptions.NotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ProductsWebApi.Web.Exceptions.NotFoundException" /> class.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="T:ProductsWebApi.Web.Extensions.AppBuilderExtensions">
            <summary>
            IApplicationBuilder extensions.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Extensions.AppBuilderExtensions.UseCustomizedSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add customized swagger to pipeline.
            </summary>
            <param name="app">Application builder.</param>
            <returns>Application builder with swagger.</returns>
        </member>
        <member name="T:ProductsWebApi.Web.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Extensions.ServiceCollectionExtensions.AddCustomizedAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add AutoMapper profile to IoC.
            </summary>
            <param name="services">Service collection where AutoMaper is registered.</param>
            <returns>Returns input <paramref name="services"/>.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Extensions.ServiceCollectionExtensions.AddCustomizedServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add web api services to IoC.
            </summary>
            <param name="services">Service collection where services are registered.</param>
            <returns>Returns input <paramref name="services"/>.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Extensions.ServiceCollectionExtensions.AddCustomizedSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Swagger to IoC.
            </summary>
            <param name="services">Service collection where Swagger is registered.</param>
            <returns>Returns input <paramref name="services"/>.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Extensions.ServiceCollectionExtensions.AddCustomizedDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add DbContext to IoC.
            </summary>
            <param name="services">Service collection where DbContext is registered.</param>
            <param name="configuration">Configurate between usind InMemoryProvider (default) and SQLProvider</param>
            <returns>Returns input <paramref name="services"/>.</returns>
        </member>
        <member name="T:ProductsWebApi.Web.Facades.Products.IProductFacade">
            <summary>
            Interface which describe facade used in ProductsController/>.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.IProductFacade.GetAll">
            <summary>
            Returns all product.
            </summary>
            <returns>List of all products.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.IProductFacade.Get(System.Guid)">
            <summary>
            Returns product by id.
            Throws NotFoundException when product not found.
            </summary>
            <param name="id">Id of the product.</param>
            <returns>Requested product.</returns>
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.IProductFacade.Update(System.Guid,ProductsWebApi.Web.Contracts.ProductUpdate)">
            <summary>
            Updates product data specified by id.
            Throws NotFoundException when product not found.
            </summary>
            <param name="id">Id of the product.</param>
            <param name="model">Data for updating product.</param>
        </member>
        <member name="T:ProductsWebApi.Web.Facades.Products.ProductFacade">
            <summary>
            Facade for ProductsController/>.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.ProductFacade.#ctor(ProductsWebApi.Data.ProductsWebApiContext,AutoMapper.IMapper)">
            <summary>
            Ctor.
            </summary>
            <param name="dbContext">Products dbContext</param>
            <param name="mapper">IMapper for mapping db entities to api dtos.</param>
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.ProductFacade.Get(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.ProductFacade.GetAll">
            <inheritdoc />
        </member>
        <member name="M:ProductsWebApi.Web.Facades.Products.ProductFacade.Update(System.Guid,ProductsWebApi.Web.Contracts.ProductUpdate)">
            <inheritdoc />
        </member>
        <member name="T:ProductsWebApi.Web.Mappers.ProductMappingProfile">
            <summary>
            Automapper profile for maping database entity to Api Dto and back.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Mappers.ProductMappingProfile.#ctor">
            <summary>
            Ctor. Configure profile.
            </summary>
        </member>
        <member name="T:ProductsWebApi.Web.Middlewares.ErrorHandlingMiddleware">
            <summary>
            Middleware handles errors and sends exception to client.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Middlewares.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{ProductsWebApi.Web.Middlewares.ErrorHandlingMiddleware})">
            <summary>
            Constructor.
            </summary>
            <param name="next">Delegate for next middleware.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:ProductsWebApi.Web.Middlewares.ErrorHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke.
            </summary>
            <param name="context">Current http context.</param>
        </member>
        <member name="T:ProductsWebApi.Web.Middlewares.ExceptionHandlingMiddlewareExtensions">
            <summary>
            Extension for registering ExceptionHandlingMiddleware.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Middlewares.ExceptionHandlingMiddlewareExtensions.UseCustomizedExceptionHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add ExceptionHandlingMiddleware to pipeline.
            </summary>
            <param name="builder">Application builder.</param>
            <returns>Application builder with ExceptionHandlingMiddleware.</returns>
        </member>
        <member name="T:ProductsWebApi.Web.Program">
            <summary>
            Startup class.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Program.Main(System.String[])">
            <summary>
            Application entry.
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:ProductsWebApi.Web.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create web host builder.
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="T:ProductsWebApi.Web.Startup">
            <summary>
            Startup.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration">Application configuration.</param>
        </member>
        <member name="P:ProductsWebApi.Web.Startup.Configuration">
            <summary>
            Application configuration.
            </summary>
        </member>
        <member name="M:ProductsWebApi.Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure IoC container.
            </summary>
            <param name="services">Service.</param>
        </member>
        <member name="M:ProductsWebApi.Web.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure web api pipeline.
            </summary>
            <param name="app">Application builder.</param>
        </member>
    </members>
</doc>
